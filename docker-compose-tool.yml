version: '3'
services:

  eureka-serviceregistry:
    build: ./MainApp/Servers/eureka
    container_name: eureka-serviceregistry
    networks:
      - demo
    ports:
      - "8761:8761"
    tty: true

  postgres:
    image: 'postgres'
    container_name: postgres
    restart: always
    networks:
      - demo
    environment:
        - POSTGRES_PASSWORD=root
        - POSTGRES_USER=test
        - POSTGRES_PASSWORD=test
        - POSTGRES_DB=test_database
        - REGISTRY_HOST=eureka-serviceregistry
    ports:
      - 5432:5432
    tty: true
  
  axon-server:
    image: axoniq/axonserver:4.3.2
    networks:
      - demo
    ports:
      - 8024:8024
      - 8124:8124

  user:
    build: ./MainApp/Servers/user
    ports:
    - "8081:8080"
    tty: true
    environment:
      DATABASE_USERNAME: test
      DATABASE_PASSWORD: test
      DATABASE_DOMAIN: postgres
      REGISTRY_HOST: eureka-serviceregistry
    networks:
      - demo
    depends_on:
      - eureka-serviceregistry
      - postgres
    volumes: 
      - maven-repo:/root/.m2

  rental:
    build: ./MainApp/Servers/rental
    ports:
    - "8082:8080"
    environment:
      DATABASE_USERNAME: test
      DATABASE_PASSWORD: test
      DATABASE_DOMAIN: postgres
      REGISTRY_HOST: eureka-serviceregistry
    networks:
      - demo
    tty: true
    depends_on:
      - eureka-serviceregistry
      - postgres
      - axon-server
    volumes: 
      - maven-repo:/root/.m2

  search:
    build: ./MainApp/Servers/search
    ports:
    - "8083:8080"
    environment:
      DATABASE_USERNAME: test
      DATABASE_PASSWORD: test
      DATABASE_DOMAIN: postgres
      REGISTRY_HOST: eureka-serviceregistry
    networks:
      - demo
    tty: true
    depends_on:
      - eureka-serviceregistry
      - postgres
      - axon-server
    volumes: 
      - maven-repo:/root/.m2

  vehicle:
    build: ./MainApp/Servers/vehicle
    ports:
    - "8084:8080"
    environment:
      DATABASE_USERNAME: test
      DATABASE_PASSWORD: test
      DATABASE_DOMAIN: postgres
      REGISTRY_HOST: eureka-serviceregistry
    networks:
      - demo
    tty: true
    depends_on:
      - eureka-serviceregistry
      - postgres
      - axon-server
    volumes: 
      - maven-repo:/root/.m2

  location:
    build: ./MainApp/Servers/location
    ports:
    - "8085:8080"
    environment:
      DATABASE_USERNAME: test
      DATABASE_PASSWORD: test
      DATABASE_DOMAIN: postgres
      REGISTRY_HOST: eureka-serviceregistry
    networks:
      - demo
    tty: true
    depends_on:
      - eureka-serviceregistry
      - postgres
      - axon-server
    volumes: 
      - maven-repo:/root/.m2

  chat:
    build: ./MainApp/Servers/chat
    ports:
    - "8086:8080"
    environment:
      DATABASE_USERNAME: test
      DATABASE_PASSWORD: test
      DATABASE_DOMAIN: postgres
      REGISTRY_HOST: eureka-serviceregistry
    networks:
      - demo
    tty: true
    depends_on:
      - eureka-serviceregistry
      - postgres
      - axon-server
    volumes: 
      - maven-repo:/root/.m2

  front:
    build: ./MainApp/Client
    ports:
    - "4200:4200"
    environment:
      - REGISTRY_HOST=eureka-serviceregistry
      - CHOKIDAR_USEPOLLING=true
    tty: true
    volumes:
      - /XML_WS/MainApp/Client:/usr/src/Client  
      - /XML_WS/MainApp/Client/node_modules

  zuul:
    build: ./MainApp/Servers/zuul
    networks:
      - demo
    ports:
    - "8087:8083"
    environment:
      DATABASE_USERNAME: test
      DATABASE_PASSWORD: test
      DATABASE_DOMAIN: postgres
      REGISTRY_HOST: eureka-serviceregistry
    tty: true
    depends_on:
      - eureka-serviceregistry
      - postgres
      - axon-server
    volumes: 
      - maven-repo2:/root/.m2

networks:
  demo:
    driver: bridge

volumes:
  database-data:
  front-storage:
  maven-repo:
  maven-repo2:
